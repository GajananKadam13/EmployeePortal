@model EmployeePortal.Models.CT_CreateEmployee
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<h2 style=" margin: 10px 10px -24px -103px;">Add Employee Information</h2> <br/></br>
<nav aria-label="breadcrumb" style="margin: -17px -1px -1px  -122px;">
    <ol class="breadcrumb pmd-breadcrumb" style="background-color: white;">
        <li class="breadcrumb-item">
            <a href="Index">Add Employee</a>
        </li>
        <li class="breadcrumb-item">Employees</li>
        <li class="breadcrumb-item active" aria-current="page">Add Employee</li>
    </ol>
</nav>

<script type="text/javascript">


    $(document).ready(function () {

             /*----------------------------------------------------*/
          var CheckInOuStatus = '@ViewBag.CheckInOuStatus';
        var InOut = CheckInOuStatus.split("_");
        var In =InOut[0];
        var Out =InOut[1];
        if (In =="CheckIn") {
            $('.GreenOnline').show();
            $('.GreenOffline').hide();
            $("#FunctionCheckInStatus").hide();
        }
        if (Out =="CheckOut") {
            $('.GreenOnline').show();
            $('.GreenOffline').hide();
        }
        if (In == "NotCheckIn" && Out == "NotCheckOut") {

            $('.GreenOnline').hide();
            $('.GreenOffline').show();
        }
                /*----------------------------------------------------*/

        //$("img").load(function () {
        //
        //    alert($(this).height());
        //    alert($(this).width());
        //});
        //$("#ProfilePictureFile").change(function (e) {
        //
        //   var Width=  document.querySelector('img').naturalWidth;
        //   var Height =document.querySelector('img').naturalHeight;

        //    if (Width != 200 && Height != 260) {
        //        alert(3);

        //    }
        //   /* var file, img;*/


        //    //if ((file = this.files[0])) {
        //    //    img = $(".img-thumbnail").attr("src");
        //    //    img.onload = function () {
        //    //        alert(this.width + " " + this.height);
        //    //    };
        //    //    img.onerror = function () {
        //    //        alert("not a valid file: " + file.type);
        //    //    };
        //    //  //  img.src = _URL.createObjectURL(file);


        //    //}

        //});



        var _URL = window.URL || window.webkitURL;

        $("#ProfilePictureFile").change(function (e) {
            var file, img;


            if ((file = this.files[0])) {
                img = new Image();
                img.onload = function () {
                   // alert(this.width + " " + this.height);
                    if (this.width != 200 && this.height != 260) {
                        $("#error_msg_ProfilePictureFile_Size").show();
                        return false;
                    }
                    else {
                        $("#error_msg_ProfilePictureFile_Size").hide();
                    }
                };

                img.onerror = function () {
                    alert("not a valid file: " + file.type);
                };
                img.src = _URL.createObjectURL(file);


            }

        });


        var hdn_message='@ViewBag.Message';
        $("#hdn_Message").val(hdn_message);

        if ($("#hdn_Message").val() != "") {
           // alert("Employee Registered Successfully.");
            if ($("#hdn_Message").val() == "Success") {
                $.ajax(
                    {
                        type: 'POST',
                        dataType: "html",
                        url: '/CreateEmployee/CallCommanMessageModel',
                        success: function (data) {

                            $("#CommanMessageModel").show();
                            $("#btnNo").text("Later");
                            $("#CommanMessageModel").find('.modal-title').text("Alert")
                            $("#CommanMessageModel").find('.modal-body').text("Employee Registered Successfully, Please Fill Employee Education Detail.");


                            $('#btnNo').click(function (e) {
                                $("#CommanMessageModel").hide();
                            });
                            $('#btnYes').click(function (e) {
                                $("#CommanMessageModel").hide();
                                window.location.href = '/CreateEmployee/AddEmployeeEducation';
                            });

                        },
                    });
            }
            if ($("#hdn_Message").val() == "Update")  {
                $.ajax(
                    {
                        type: 'POST',
                        dataType: "html",
                        url: '/CreateEmployee/CallCommanMessageModel',
                        success: function (data) {

                            $("#CommanMessageModel").show();
                            $("#btnNo").text("Later");
                            $("#CommanMessageModel").find('.modal-title').text("Alert")
                            $("#CommanMessageModel").find('.modal-body').text("Employee Updated Successfully, Please Fill Employee Education Detail.");


                            $('#btnNo').click(function (e) {
                                $("#CommanMessageModel").hide();
                            });
                            $('#btnYes').click(function (e) {
                                $("#CommanMessageModel").hide();
                                window.location.href = '/CreateEmployee/AddEmployeeEducation';
                            });

                        },
                    });
            }


        }

        var hdn_MaritalStatus= $("#hdn_MaritalStatus").val();
        if (hdn_MaritalStatus!="") {
            if (hdn_MaritalStatus =="Married") {
                $("#Married").prop("checked", true)
            }
            if (hdn_MaritalStatus == "Unmarried") {
                $("#Unmarried").prop("checked", true)
            }
        }
        var hdn_Gender = $("#hdn_Gender").val();
        if (hdn_Gender != "") {
            if (hdn_Gender == "Male") {
                $("#male").prop("checked", true)
            }
            if (hdn_Gender == "Female") {
                $("#female").prop("checked", true)
            }
        }
        var hdn_Department = $("#hdn_Department").val();
        if (hdn_Department != "") {
           $("#ddlDepartment option[value="+hdn_Department+"]").attr('selected', 'selected');
        }

        var hdn_Designation = $("#hdn_Designation").val();
        if (hdn_Designation != "") {
            $("#ddlDesignation option[value=" + hdn_Designation + "]").attr('selected', 'selected');
        }
        var hdn_ReportingEmployee = $("#hdn_ReportingEmployee").val();
        if (hdn_ReportingEmployee != "") {
            $("#ddlReportingEmployee option[value=" + hdn_ReportingEmployee + "]").attr('selected', 'selected');
        }
        var hdn_TypeofEmployee = $("#hdn_TypeofEmployee").val();
        if (hdn_TypeofEmployee != "") {
            if (hdn_TypeofEmployee == "Full Time") {
                $("#FullTime").prop("checked", true)
            }
            if (hdn_TypeofEmployee == "Part Time") {
                $("#PartTime").prop("checked", true)
            }
        }

        var hdn_Role = $("#hdn_Role").val();
        if (hdn_Role != "") {
            $("#ddlRole option[value=" + hdn_Role + "]").attr('selected', 'selected');
        }
        var hdn_Country = $("#hdn_Country").val();
        if (hdn_Country != "") {
            $("#ddlCountry option[value=" + hdn_Country + "]").attr('selected', 'selected');
            document.getElementById("btn_Reset").disabled = true;
        }
        var hdn_DateofJoining = $("#hdn_DateofJoining").val();
        if (hdn_DateofJoining != "") {
            $("#DateofJoining").val(hdn_DateofJoining);
        }
        var hdn_DateOfBirth = $("#hdn_DateOfBirth").val();
        if (hdn_DateOfBirth != "") {
            $("#DateofBirth").val(hdn_DateOfBirth);
        }

        var hdn_Description = $("#hdn_Description").val();
        if (hdn_Description != "") {
            $("#Description").val(hdn_Description);
        }
        var hdn_ProfilePictureName = $("#hdn_ProfilePictureName").val();
        if (hdn_ProfilePictureName != "") {
           
            //$("#ProfilePictureName").attr("src", "/UploadsImages/" + hdn_ProfilePictureName + "");
            $("#ProfilePicAvtar").attr("src", "/UploadsImages/" + hdn_ProfilePictureName + "");
            $("#ProfilePicAvtar").hide();
            $("#ProfilePicEmpty").attr("src", "/UploadsImages/" + hdn_ProfilePictureName + "");
            $("#ProfilePicEmpty").show();
        }
        


        
       
        




        @*$("#ddlGender").change(function () {

            alert($('option:selected', $(this)).text());
            '@Model.Gender'=$('option:selected', $(this)).text();
        });*@
        @*if (@Model.EMP_PK_ID!= 0) {
            $('#ddlGender').val("@Model.Gender");
            $('#ddlRole').val("@Model.Role");
        }
        if (@Model.EMP_PK_ID!= 0) {
            $('#btn_submit').text('Update');
        }*@

        
        $("#btn_Reset").click(function () {
            $("#FirstName").val("");
            $("#MiddleName").val("");
            $("#LastName").val("");
            $("#Phone").val("");
            $("#PersonalEmail").val("");
            $("#DateofBirth").val("");
            $("#male").prop("checked", false);
            $("#female").prop("checked", false); 
            $("#Married").prop("checked", false);
            $("#Unmarried").prop("checked", false);
            $("#Description").val("");
            $("#EmployeeEnrollmentID").val("");
            $("#DateofJoining").val("");
            $("#CompanyEmail").val("");
            $("#ddlDepartment option[value='']").attr('selected', 'selected');
            $("#ddlDesignation option[value='']").attr('selected', 'selected');
            $("#ddlReportingEmployee option[value='']").attr('selected', 'selected');
            $("#ddlRole option[value='']").attr('selected', 'selected');
            $("#FullTime").prop("checked", false);
            $("#PartTime").prop("checked", false);

            $("#AddressLine1").val("");
            $("#AddressLine2").val("");
            $("#City").val("");
            $("#ZipCode").val("");
            $("#ddlCountry option[value='']").attr('selected', 'selected');
        }); 

    });


    $(document).ready(function () {
        var readURL = function (input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('.avatar').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }
        $(".file-upload").on('change', function () {
            readURL(this);
        });
        /*----------------*/


        $("#FirstName,#LastName,#MiddleName,#State,#City").keypress(function (evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if ((charCode <= 93 && charCode >= 65) || (charCode <= 122 && charCode >= 97) || charCode == 8) {

                return true;
            }
            return false;
        });

        $("#Education").click(function () {
            window.location.href = '/CreateEmployee/AddEmployeeEducation';
        });

        $("#Experience").click(function () {

            window.location.href = '/CreateEmployee/AddEmployeeExperience';
        });
        $("#Documents").click(function () {
            window.location.href = '/CreateEmployee/AddEmployeeDocumetns';
        });
        $("#Salary").click(function () {
            window.location.href = '/CreateEmployee/AddEmployeeSalary';
        });

        //$("#LoginForm").submit(function (e) {
        //    alert(3);
        //    e.preventDefault();
        //    this.submit();
        //    return false;
        //});
    //    $("#myform").submit(function (e) {
    //        e.preventDefault();
    //     this.submit();
    //    return false; //I put it here as a fallback
        //function clickloginformbtn() {
        //    //your code here
        //   // $("#LoginForm").submit();
        //    alert(3);
        //}



    });
</script>

@using (Html.BeginForm("Index", "CreateEmployee", new { id = "LoginForm" }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @*if (Model.EMP_PK_ID != 0)
        {
            <a href='@Url.Action("ViewEmployee", "CreateEmployee")' class="btn btn-primary">Back</a>
        }*@
<div class="">
    <div class="col-md-12" style="margin: 10px 10px 10px -106px; background-color: #31353D ">
        <div class="pmd-tab-active-bar" style="width: 93.125px; left: 0px;"></div><ul class="nav nav-tabs" role="tablist" style="width: 325.578px;">
            <li class="nav-item"><a id="About" style="margin: 0px 0px 0px -17px" class="nav-link active show" href="#about" aria-controls="about" role="tab" data-toggle="tab" aria-selected="true">About Employee</a></li>
            <li class="nav-item"><a id="Education" class="nav-link" href="/CreateEmployee/AddEmployeeEducation" role="tab" data-toggle="tab" aria-selected="false">Education</a></li>
            <li class="nav-item"><a id="Experience" style="margin: -41px 19px -64px 236px;" class="nav-link" href="/CreateEmployee/AddEmployeeExperience" aria-controls="salary" role="tab" data-toggle="tab" aria-selected="false">Experience</a></li>
            <li class="nav-item"><a id="Documents" style="margin: -41px 19px -64px 350px;" class="nav-link" href="/CreateEmployee/AddEmployeeDocumetns" aria-controls="salary" role="tab" data-toggle="tab" aria-selected="false">Documents</a></li>
            <li class="nav-item"><a id="Salary" style="margin: -41px 19px -64px 462px;" class="nav-link" href="/CreateEmployee/AddEmployeeSalary" aria-controls="salary" role="tab" data-toggle="tab" aria-selected="false">Salary</a></li>
            <!--<li>-->
            @*<a href="#">General</a>*@
            <!--<a href="/CreateEmployee/AddEmployeeEducation"><i class="fa fa-tasks" aria-hidden="true"></i><span class="hidden-xs hidden-sm">Create Employee</span></a>
            </li>-->
        </ul>
    </div>




    <input type="hidden" id="hdn_Message" name="hdn_Message" />
    <input type="hidden" id="hdn_MaritalStatus" value="@ViewBag.MaritalStatus" name="hdn_MaritalStatus" />
    <input type="hidden" id="hdn_Gender" value="@ViewBag.Gender" name="hdn_Gender" />
    <input type="hidden" id="hdn_Department" value="@ViewBag.Department" name="hdn_Department" />

    <input type="hidden" id="hdn_Designation" value="@ViewBag.Designation" name="hdn_Designation" />
    <input type="hidden" id="hdn_ReportingEmployee" value="@ViewBag.ReportingEmployee" name="hdn_ReportingEmployee" />
    <input type="hidden" id="hdn_TypeofEmployee" value="@ViewBag.TypeofEmployee" name="hdn_TypeofEmployee" />
    <input type="hidden" id="hdn_Role" value="@ViewBag.Role" name="hdn_Role" />
    <input type="hidden" id="hdn_Country" value="@ViewBag.Country" name="hdn_Country" />

    <input type="hidden" id="hdn_DateofJoining" value="@ViewBag.DateofJoining" name="hdn_DateofJoining" />
    <input type="hidden" id="hdn_DateOfBirth" value="@ViewBag.DateOfBirth" name="hdn_DateOfBirth" />
    <input type="hidden" id="hdn_Description" value="@ViewBag.Description" name="hdn_Description" />
    <input type="hidden" id="hdn_ProfilePictureName" value="@ViewBag.ProfilePictureName" name="hdn_ProfilePictureName" />
  


    @*<input type="hidden" id="hdn_Emp_pkid" value="@Model.EmployeePKID" name="hdn_Emp_pkid" />*@
    <!-- Name Section -->
    <div class="row">
        <div class="col-md-12 col-md-offset-1" style=" margin: 7px -10px -3px -95px;">
            <form id="myform" class="form-horizontal" role="form" onSubmit="mySubmitFunction()">
                <fieldset>
                    <h5 class="card-title mb-3">Profile Picture</h5>
                    <div class="text-center" style="marin-right:20px">
                        <img src="http://ssl.gstatic.com/accounts/ui/avatar_2x.png" id="ProfilePicAvtar" class="avatar img-circle img-thumbnail" alt="avatar">
                        <img class="avatar img-circle img-thumbnail" style="display:none;" id="ProfilePicEmpty" alt="avatar">
                        <h6></h6>
                        <input type="file" name="ProfilePictureFile" id="ProfilePictureFile" src="" class=" ProImage text-center center-block file-upload">
                        @Html.ValidationMessageFor(model => model.ProfilePictureName, "", new { @class = "text-danger" })
                        <br />
                        <span class="text-danger" id="error_msg_ProfilePictureFile_Size" style="display:none; margin-right:10px">Image size should be Width:200px & Height:260px.</span>
                    </div>

                    <hr />
                    <h5 class="card-title mb-3">Basic Information</h5>

                    <div class="form-row">
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">First Name</label>
                                @Html.EditorFor(model => model.EmployeePKID, new { htmlAttributes = new { @class = "form-control", @id = "EmployeePKID", @style="display:none;", @placeholder = "EmployeePKID", @autocomplete = "off" } })
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @id = "FirstName", @placeholder = "FirstName", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">Middle Name</label>
                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", @id = "MiddleName", @placeholder = "MiddleName", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">Last Name</label>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @id = "LastName", @placeholder = "LastName", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">Phone</label>
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @id = "Phone", @placeholder = "Phone", @autocomplete = "off", @type = "number", onKeyDown = "if(this.value.length==10 && event.keyCode!=8) return false;" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">Personal Email</label>
                                @Html.EditorFor(model => model.PersonalEmail, new { htmlAttributes = new { @class = "form-control", @id = "PersonalEmail", @placeholder = "PersonalEmail", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.PersonalEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*<div class="col-12 col-sm-6 col-md-6">
                                <label for="fn" class="col-form-label control-label">Date of Birth*</label>
                                <select id="inputState" class="form-control">
                                    <option selected>Choose ...</option>
                                    <option> New Buyer</option>
                                    <option> Auction</option>
                                    <option> Complaint</option>
                                    <option> Feedback</option>
                                </select>
                            </div>*@
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">Date of Birth*</label>
                                <input type="date" id="DateofBirth" name="DateofBirth" class="form-control">
                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="col-12 col-sm-6 col-md-3" style="margin: 8px -13px 17px  11px">
                            <label for="Gender" class="d-block title-label">Gender</label>
                            <div class="custom-control custom-radio pmd-radio custom-control-inline">
                                <input type="radio" id="male" name="gender" value="Male" class="custom-control-input">
                                <label class="custom-control-label pmd-radio-ripple-effect" for="male">Male</label>
                            </div>
                            <div class="custom-control custom-radio pmd-radio custom-control-inline">
                                <input type="radio" id="female" name="gender" value="Female" class="custom-control-input">
                                <label class="custom-control-label pmd-radio-ripple-effect" for="female">Female</label>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3" style="margin:8px -13px 17px 11px ">
                            <label class="d-block title-label">Marital Status</label>
                            <div class="custom-control custom-radio pmd-radio custom-control-inline">
                                <input type="radio" id="Married" name="MaritalStatus" value="Married" class="custom-control-input">
                                <label class="custom-control-label pmd-radio-ripple-effect" for="Married">Married</label>
                            </div>
                            <div class="custom-control custom-radio pmd-radio custom-control-inline">
                                <input type="radio" id="Unmarried" name="MaritalStatus" value="Unmarried" class="custom-control-input">
                                <label class="custom-control-label pmd-radio-ripple-effect" for="Unmarried">Unmarried</label>
                            </div>
                        </div>


                    </div>

                    <div class="form-row">
                        <div class="col-md-12 ">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="Description" class="d-block title-label">Description</label>
                                <textarea id="Description" name="Description" cols="40" rows="5" class="form-control"></textarea>
                            </div>
                        </div>
                    </div>

                    <hr />
                    <h5 class="card-title mb-3">Employee Information</h5>
                    <div class="form-row">
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">Employee Enrollment ID</label>
                                @Html.EditorFor(model => model.EmployeeEnrollmentID, new { htmlAttributes = new { @class = "form-control", @id = "EmployeeEnrollmentID", @placeholder = "Employee Enrollment ID", @autocomplete = "off", @type = "number", onKeyDown = "if(this.value.length==10 && event.keyCode!=8) return false;" } })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label class="col-form-label control-label">Date of Joining*</label>
                                <input type="date" id="DateofJoining" name="DateofJoining" class="form-control">
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">Company Email</label>
                                @Html.EditorFor(model => model.CompanyEmail, new { htmlAttributes = new { @class = "form-control", @id = "CompanyEmail", @placeholder = "Company Email", @autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label class="col-form-label control-label">Department</label>
                                <div class="">

                                    <select id="ddlDepartment" name="ddlDepartment" class="form-control">
                                        <option value="" selected>Choose ...</option>
                                        <option value="1"> HR</option>
                                        <option value="2"> Development</option>
                                        @*<option value="3"> Accountant</option>
                                        <option value="4"> Sales</option>
                                        <option value="5"> Marketing</option>*@
                                    </select>
                                </div>
                                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label class="col-form-label control-label">Designation</label>
                                <div class="">
                                    <select id="ddlDesignation" name="ddlDesignation" class="form-control">
                                        <option value="" selected>Choose ...</option>
                                        <option value="1"> HR</option>
                                        <option value="2"> Software Engineer</option>
                                        <option value="3"> Manager</option>
                                        @*<option value="4"> Employee</option>*@
                                        <option value="4"> Security</option>
                                    </select>
                                </div>
                                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label class="col-form-label control-label">Reporting Employee</label>
                                <div class="">
                                    @Html.DropDownList("ddlReportingEmployee", new SelectList(ViewBag.ReporteeEmployee, "EmployeePKID", "FirstName"), "Choose", new { @class = "form-control" })
                                    @*<select id="ddlReportingEmployee" name="ddlReportingEmployee" class="form-control">
                                        <option value="" selected>Choose ...</option>
                                        <option value="1"> Manager</option>
                                        <option value="2"> Development</option>
                                        <option value="3"> Accountant</option>
                                        <option value="4"> Sales</option>
                                        <option value="5"> Marketing</option>
                                    </select>*@
                                </div>
                                @Html.ValidationMessageFor(model => model.ReportingEmployee, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3" style="margin:8px -13px 17px 11px ">
                            <label class="d-block title-label">Type of Employee</label>
                            <div class="custom-control custom-radio pmd-radio custom-control-inline">
                                <input type="radio" id="FullTime" name="TypeofEmployee" value="Full Time" class="custom-control-input">
                                <label class="custom-control-label pmd-radio-ripple-effect" for="FullTime">Full Time</label>
                            </div>
                            <div class="custom-control custom-radio pmd-radio custom-control-inline">
                                <input type="radio" id="PartTime" name="TypeofEmployee" value="Part Time" class="custom-control-input">
                                <label class="custom-control-label pmd-radio-ripple-effect" for="PartTime">Part Time</label>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label class="col-form-label control-label">Role</label>
                                <div class="">

                                    <select id="ddlRole" name="ddlRole" class="form-control">
                                        <option value="" selected>Choose ...</option>
                                        <option value="1">Admin</option>
                                        <option value="2">Employee</option>
                                        <option value="3">Manager</option>
                                        <option value="4">HR</option>

                                    </select>
                                </div>
                                @Html.ValidationMessageFor(model => model.ReportingEmployee, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <hr />
                    <h5 class="card-title mb-3">Contact Information</h5>
                    <div class="form-row">
                        <div class="col-12 col-sm-6 col-md-4">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">Address Line 1</label>
                                @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control", @id = "AddressLine1", @placeholder = "Address Line 1", @autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-4">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">Address Line 2</label>
                                @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control", @id = "AddressLine2", @placeholder = "Address Line 2", @autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-4">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">City</label>
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @id = "City", @placeholder = "City", @autocomplete = "off" } })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-12 col-sm-6 col-md-4">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">State</label>
                                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @id = "State", @placeholder = "State", @autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-4">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">ZipCode</label>
                                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @id = "ZipCode", @placeholder = "ZipCode", @autocomplete = "off", @type = "number", onKeyDown = "if(this.value.length==6 && event.keyCode!=8) return false;" } })
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-4">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label class="col-form-label control-label">Country</label>
                                <div class="">
                                    <select id="ddlCountry" name="ddlCountry" class="form-control">
                                        <option value="" selected>Choose ...</option>
                                        <option value="1"> India(Bharat)</option>
                                        <option value="2"> Japan</option>
                                        <option value="3"> USA</option>
                                        <option value="4"> Rashiya</option>
                                        <option value="5"> France</option>
                                    </select>
                                </div>
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <!-- Form Name -->

                    <div class="form-row">
                        <div class="col-md-offset-2 col-md-10" style="margin: 16px 4px -31px -17px;">
                            <button type="submit" text="Submit" onclick="clickloginformbtn();" id="btn_submit" style="position: relative; left: 16px; padding: 11px 67px 11px 66px; margin-right:20px" class="btn btn-primary">Submit</button>
                            <input type="button" style="padding:11px 67px 11px 66px;" id="btn_Reset" value="Reset" name="btn_Reset" class="btn btn-warning" />
                        </div>
                    </div>
                </fieldset>
            </form>
        </div><!-- /.col-lg-12 -->
    </div><!-- /.row --> <!-- Has Sibling Modal -->
    @*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>*@


    <div class="tab-content">
        <!-- About Tab -->
        <div role="tabpanel" style="margin: 42px 10px 8px -96px;" class="tab-pane active show" id="about">
            <div class="card pmd-card">
            </div>
        </div>
    </div>
</div>



















}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
</div>
@*<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>*@



@*------------------------*@



@*<div class="form-group">
    <div class="col-md-4 mb-3 dropdown">
        @Html.LabelFor(model => model.Gender)
        @Html.DropDownList("ddlGender", new List<SelectListItem>
         {
            new SelectListItem{ Text="Male", Value = "Male" },
            new SelectListItem{ Text="Female", Value = "Female" }

        }, "Select Gender", new { @class = "btn btn-primary dropdown-toggle", @id = "ddlGender" })
    </div>

    <div class="col-md-4 mb-3">
        @Html.LabelFor(model => model.DOB)
        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @id = "DOB", @placeholder = "DOB", @autocomplete = "off" } })
        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
    </div>





    <div class="col-md-4 mb-3">
        @Html.LabelFor(model => model.Role)
        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })

        @Html.DropDownList("ddlRole", new List<SelectListItem>
       {
          new SelectListItem{ Text="Admin", Value = "1" },
          new SelectListItem{ Text="HR", Value = "2" },
          new SelectListItem{ Text="Employee", Value = "3" },
          new SelectListItem{ Text="Manager", Value = "4" },
            new SelectListItem{ Text="Accountant", Value = "5" }
      }, "Select Role", new { @class = "btn btn-primary dropdown-toggle", @id = "ddlRole" })
    </div>*@



