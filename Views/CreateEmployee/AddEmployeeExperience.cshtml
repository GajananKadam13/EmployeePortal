@model EmployeePortal.Models.CT_EmployeeExperience

@{
    ViewBag.Title = "AddEmployeeExperience";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<h2>Add Employee Experience</h2>
<nav aria-label="breadcrumb" style="margin: -17px -1px -1px  -38px;">
    <ol class="breadcrumb pmd-breadcrumb" style="background-color: white;">
        <li class="breadcrumb-item">
            <a href="AddEmployeeExperience">Experience</a>
        </li>
        <li class="breadcrumb-item">Employees</li>
        <li class="breadcrumb-item active" aria-current="page">Add Employee</li>
    </ol>
</nav>
<style>
    .disbale {
        cursor: not-allowed;
    }
</style>
<script>


    $(document).ready(function () {
        $('#btn_Reset').on('click', function () {
            $('#Organization').val("");
            $('#ExperienceDesignation').val("");

            $('#StartDate').val("");
            $('#EndDate').val("");
            $('#StartSalary').val("");
            $('#EndSalary').val("");
            $('#Reason').val("");
         
            $("#hdn_EmpExp_PKID").val(0);
        });

        $("#About").click(function () {

            window.location.href = '/CreateEmployee/Index';
        });
        $("#Education").click(function () {

            window.location.href = '/CreateEmployee/AddEmployeeEducation';
        });
        $("#Experience").click(function () {

            window.location.href = '/CreateEmployee/AddEmployeeExperience';
        });
        $("#Documents").click(function () {
            window.location.href = '/CreateEmployee/AddEmployeeDocumetns';
        });
        $("#Salary").click(function () {
            window.location.href = '/CreateEmployee/AddEmployeeSalary';
        });

        $("#Education").removeClass("active hide");
        $("#About").removeClass("active hide");
        $("#Experience").addClass("active show");
        $("#Documents").removeClass("active hide");
        $("#Salary").removeClass("active hide");


        $("#Organization,#ExperienceDesignation").keypress(function (evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if ((charCode <= 93 && charCode >= 65) || (charCode <= 122 && charCode >= 97) || charCode == 8) {

                return true;
            }
            return false;
        });

        /*----------START CODE-----------------*/
        GetData();
        function GetData() {


            $.ajax(
                {
                    type: 'GET',
                    dataType: 'JSON',
                    url: '/CreateEmployee/GetData',
                    data: {},
                    success:
                        function (response) {
                            // Generate HTML table.
                            debugger;
                            //convertJsonToHtmlTable(JSON.parse(response), $("#tableEmpExperience"));
                            var Listdata = JSON.parse(response)
                            var len = Listdata.length;
                            var txt = "";
                            for (var i = 0; i < len; i++) {

                                txt += "<tr id=" + Listdata[i].Exp_PKID + " ><td style='display: none;'>" + Listdata[i].Exp_PKID + "</td><td style='display: none;'>" + Listdata[i].LastEmployeePKID + "</td><td>" + Listdata[i].Organization + "</td><td>" + Listdata[i].ExperienceDesignation + "</td> <td>" + Listdata[i].StartDateFormat + "</td>  <td>" + Listdata[i].EndDateFormat + "</td> <td>" + Listdata[i].StartSalary + "</td>  <td>" + Listdata[i].EndSalary + "</td>  <td>" + Listdata[i].Reason + "</td><td> " + ' <input type="button" id="btnView_' + Listdata[i].Exp_PKID + '" value="View"  /> |' + ' <input type="button" id="btnEdi_' + Listdata[i].Exp_PKID + '" value="Edit"  /> |' + ' <input type="button" id="btnDel_' + Listdata[i].Exp_PKID + '" value="Delete"  /> |' + "</td></tr >";

                            }
                            if (txt != "") {
                                $("#tableEmpExperience").append(txt).removeClass("hidden");
                            }
                        },
                    error:
                        function (response) {
                            alert("Error: " + response);
                        }
                });
        }
        /*---------END CODE------------------*/

        $('#tableEmpExperience').on('click', 'input', function () {
            document.getElementById("Organization").disabled = false;
            document.getElementById("ExperienceDesignation").disabled = false;
            document.getElementById("StartDate").disabled = false;
            document.getElementById("EndDate").disabled = false;
            document.getElementById("StartSalary").disabled = false;
            document.getElementById("EndSalary").disabled = false;
            document.getElementById("Reason").disabled = false;
            document.getElementById("btn_submitMain").disabled = false;
            debugger;
            //var id = table.row(this).id();
            var row = $(this).closest('tr');
            //var idddd = $(row).find('td').eq(0).html();
            //var id = $("tr").find(".id")
            var btn_idArry = $(this).attr('id');
            var btn_Name = btn_idArry.split('_')[0];
            var btn_id = btn_idArry.split('_')[1];
            if (btn_Name != "btnDel") {


                var Exp_PKID = $(this).closest('tr').find("td").eq(0).html();
                var Employee_PKID = $(this).closest('tr').find("td").eq(1).html().trim();
                $("#hdn_EmpExp_PKID").val(Exp_PKID);
                var Organization = $(this).closest('tr').find("td").eq(2).html().trim();
                var Designation = $(this).closest('tr').find("td").eq(3).html().trim();
                var StartDate = $(this).closest('tr').find("td").eq(4).html().trim();
                var EndDate = $(this).closest('tr').find("td").eq(5).html().trim();
                var StartSalary = $(this).closest('tr').find("td").eq(6).html().trim();
                var EndSalary = $(this).closest('tr').find("td").eq(7).html().trim();
                var Reason = $(this).closest('tr').find("td").eq(8).html().trim();

                if (Organization != "") {
                    $("#Organization").val(Organization);
                }

                if (Designation != "") {
                    $("#ExperienceDesignation").val(Designation);
                }

                if (StartDate != "") {
                    $("#StartDate").val(StartDate);
                }

                if (EndDate != "") {
                    $("#EndDate").val(EndDate);
                }

                if (StartSalary != "") {
                    $("#StartSalary").val(StartSalary);
                }

                if (EndSalary != "") {
                    $("#EndSalary").val(EndSalary);
                }

                if (Reason != "") {
                    $("#Reason").val(Reason);
                }
               
            }
            if (btn_Name == "btnDel") {
                $.ajax(
                    {
                        type: 'POST',
                        dataType: "html",
                        url: '/CreateEmployee/CallCommanMessageModel',
                        //data: { jsonInput: JSON.stringify(jsonInput) },
                        ///data: {,

                        //data: { id: '' },
                        success: function (data) {
                            debugger;
                            //alert(data);
                            // $('#CommanMessageModel').html(data);
                            $("#CommanMessageModel").show();
                            $("#CommanMessageModel").find('.modal-title').text("Alert")
                            $("#CommanMessageModel").find('.modal-body').text("Are you sure, do you want to delete this record?");


                            $('#btnNo').click(function (e) {
                                $("#CommanMessageModel").hide();
                            });
                            $('#btnYes').click(function (e) {
                                $("#CommanMessageModel").hide();
                                //$('#tableEmpExperience tr:eq(2)').show();
                                debugger;
                                $('#tableEmpExperience  tr#' + btn_id + '').remove();

                                debugger;
                                $.ajax(
                                    {
                                        type: 'POST',
                                        dataType: "html",
                                        url: '/CreateEmployee/DeleteEmployeeExperienceById',
                                        data: { EmployeeEduPKID: btn_id },
                                        success: function (data) {
                                            debugger;
                                            /*window.location.href = '/CreateEmployee/AddEmployeeExperience';*/

                                            $.ajax(
                                                {
                                                    type: 'POST',
                                                    dataType: "html",
                                                    url: '/CreateEmployee/CallCommanMessageModel',
                                                    //data: { jsonInput: JSON.stringify(jsonInput) },
                                                    ///data: {,

                                                    //data: { id: '' },
                                                    success: function (data) {
                                                        debugger;
                                                        //alert(data);
                                                        // $('#CommanMessageModel').html(data);
                                                        $("#CommanMessageModel").show();
                                                        $("#CommanMessageModel").find('.modal-title').text("Alert")
                                                        $("#CommanMessageModel").find('.modal-body').text("Record deleted successfully.");

                                                        $("#btnNo").text("Close");
                                                        $("#btnYes").hide();
                                                        $('#btnNo').click(function (e) {
                                                            $("#CommanMessageModel").hide();
                                                            window.location.href = '/CreateEmployee/AddEmployeeExperience';
                                                        });
                                                    },
                                                });


                                        },
                                    });


                            });

                        },
                    });
            }

            if (btn_Name == "btnEdi") {
                document.getElementById("btn_submitMain").disabled = false;
                document.getElementById("btn_Reset").disabled = false;
            }
           
            if (btn_Name == "btnView") {
                document.getElementById("Organization").disabled = true;
                document.getElementById("ExperienceDesignation").disabled = true;
                document.getElementById("StartDate").disabled = true;
                document.getElementById("EndDate").disabled = true;
                document.getElementById("StartSalary").disabled = true;
                document.getElementById("EndSalary").disabled = true;
                document.getElementById("Reason").disabled = true;
                document.getElementById("btn_submitMain").disabled = true;
                document.getElementById("btn_Reset").disabled = true;
            }

        });


        $('#btn_submitMain').on('click', function () {
            var Counter = 0;
            if ($('#Organization').val() == "") {
                $('#error_msg_Organization').show();
                Counter++;
            }
            else {
                $('#error_msg_Organization').hide();
            }
            if ($('#ExperienceDesignation').val() == "") {
                $('#error_msg_ExperienceDesignation').show();
                Counter++;
            }
            else {
                $('#error_msg_ExperienceDesignation').hide();
            }
            if ($('#StartDate').val() == "") {
                $('#error_msg_StartDate').show();
                Counter++;
            }
            else {
                $('#error_msg_StartDate').hide();
            }


            if ($('#EndDate').val() == "") {
                $('#error_msg_EndDate').show();
                Counter++;
            }
            else {
                $('#error_msg_EndDate').hide();
            }
            if ($('#StartSalary').val() == "") {
                $('#error_msg_StartSalary').show();
                Counter++;
            }
            else {
                $('#error_msg_StartSalary').hide();
            }


            if ($('#EndSalary').val() == "") {
                $('#error_msg_EndSalary').show();
                Counter++;
            }
            else {
                $('#error_msg_EndSalary').hide();
            }
            if ($('#Reason').val() == "") {
                $('#error_msg_Reason').show();
                Counter++;
            }
            else {
                $('#error_msg_Reason').hide();
            }



            if (Counter == 0) {
                //$('#Organization').val("");
                //$('#ExperienceDesignation').val("");
                //$('#StartDate').val("");
                //$('#EndDate').val("");
                //$('#StartSalary').val("");
                //$('#EndSalary').val("");
                //$('#Reason').val("");
            }
            else {
                return false;
            }

        });

        $("#Institute").keypress(function (evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if ((charCode <= 93 && charCode >= 65) || (charCode <= 122 && charCode >= 97) || charCode == 8) {

                return true;
            }
            return false;
        });


        if ($("#hdn_Submit").val() == "Submit") {
            debugger;
            var hdn_message = '@ViewBag.Message';
            $.ajax(
                {
                    type: 'GET',
                    dataType: "html",
                    data: { hdn_message: hdn_message },
                    url: '/CreateEmployee/AddEmployeeExperience',
                    success: function (data) {

                    },
                });

            $("#hdn_Message").val(hdn_message);
            if ($("#hdn_Message").val() == "Success") {
                $.ajax(
                    {
                        type: 'POST',
                        dataType: "html",
                        url: '/CreateEmployee/CallCommanMessageModel',
                        success: function (data) {
                            debugger;
                            $("#CommanMessageModel").show();
                            $("#btnNo").text("Later");
                            $("#CommanMessageModel").find('.modal-title').text("Alert")
                            $("#CommanMessageModel").find('.modal-body').text("Employee Experience Added Successfully, Please Fill Employee Documents Detail.");

                            $('#btnNo').click(function (e) {
                                $("#CommanMessageModel").hide();
                            });
                            $('#btnYes').click(function (e) {
                                $("#CommanMessageModel").hide();
                                window.location.href = '/CreateEmployee/AddEmployeeDocumetns';
                            });
                        },
                    });
            }

            if ($("#hdn_Message").val() == "Updated") {
                $.ajax(
                    {
                        type: 'POST',
                        dataType: "html",
                        url: '/CreateEmployee/CallCommanMessageModel',
                        success: function (data) {
                            debugger;
                            $("#CommanMessageModel").show();
                            $("#btnNo").text("Close");
                            $("#CommanMessageModel").find('.modal-title').text("Alert")
                            $("#CommanMessageModel").find('.modal-body').text("Employee Education Updated Successfully.");

                            $('#btnNo').click(function (e) {
                                $("#CommanMessageModel").hide();
                            });
                            $('#btnYes').hide();
                            //$('#btnYes').click(function (e) {
                            //    $("#CommanMessageModel").hide();
                            //    window.location.href = '/CreateEmployee/AddEmployeeExperience';
                            //});

                        },
                    });
            }
        }

    });





    //$("#tableEmpExperience tr  input").on('click', function (e) {
    //    debugger;
    //    //alert($(this).closest('td').parent()[0].sectionRowIndex);
    //});
    //function Edit(id) {onclick="Edit(' + Listdata[i].Exp_PKID+')"
    //    debugger;
    //    $("#tableEmpExperience").closest('tr').find("td").eq(0).html().trim();

    //    //id = $(this).closest('tr').attr('id');
    //    var Edu_PKID = $(this).closest('tr').find("td").eq(0).html().trim();
    //    var DegreeeId = $(this).closest('tr').find("td").eq(1).html().trim();
    //    var Degreee = $(this).closest('tr').find("td").eq(2).html().trim();
    //    var SpecializationId = $(this).closest('tr').find("td").eq(3).html().trim();
    //    var Specialization = $(this).closest('tr').find("td").eq(4).html().trim();
    //    var PassingYear = $(this).closest('tr').find("td").eq(5).html().trim();
    //    var Institute = $(this).closest('tr').find("td").eq(6).html().trim();
    //    var StartDate = $(this).closest('tr').find("td").eq(7).html().trim();
    //    var EndDate = $(this).closest('tr').find("td").eq(8).html().trim();
    //    var Percentage = $(this).closest('tr').find("td").eq(9).html().trim();

    //    if (DegreeeId != "") {
    //        $("#ddlDegreee option[value=" + DegreeeId + "]").attr('selected', 'selected');
    //    }
    //    if (SpecializationId != "") {
    //        $("#ddlSpecialization option[value=" + SpecializationId + "]").attr('selected', 'selected');
    //    }

    //    if (PassingYear != "") {
    //        $("#PassingYear").val(PassingYear);
    //    }

    //    if (Institute != "") {
    //        $("#Institute").val(Institute);
    //    }
    //    if (StartDate != "") {
    //        $("#StartDate").val(StartDate);
    //    }
    //    if (EndDate != "") {
    //        $("#EndDate").val(EndDate);
    //    }

    //    if (Percentage != "") {
    //        $("#Percentage").val(Percentage);
    //    }
    //    if (Edu_PKID != "") {
    //        $("#hdn_Edu_PKID").val(Edu_PKID);
    //    }

    //}
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="hdn_Submit" value="@ViewBag.Submit" name="hdn_Submit" />
    <input type="hidden" id="hdn_EmpExp_PKID" value="" name="hdn_EmpExp_PKID" />
    <input type="hidden" id="hdn_Message" value="@ViewBag.Message" name="hdn_Message" />
    <div class="">
        <div class="col-md-12" style="margin: 0px 6px 15px -36px; background-color: #31353D ">
            <div class="pmd-tab-active-bar" style="width: 93.125px; left: 0px;"></div><ul class="nav nav-tabs" role="tablist" style="width: 325.578px;">
    <li class="nav-item"><a id="About" style="margin: 0px 0px 0px -17px" class="nav-link active show" href="#about" aria-controls="about" role="tab" data-toggle="tab" aria-selected="true">About Employee</a></li>
    <li class="nav-item"><a id="Education" class="nav-link" href="/CreateEmployee/AddEmployeeEducation" role="tab" data-toggle="tab" aria-selected="false">Education</a></li>
    <li class="nav-item"><a id="Experience" style="margin: -41px 19px -64px 236px;" class="nav-link" href="/CreateEmployee/AddEmployeeExperience" aria-controls="Experience" role="tab" data-toggle="tab" aria-selected="false">Experience</a></li>
    <li class="nav-item"><a id="Documents" style="margin: -41px 19px -64px 350px;" class="nav-link" href="/CreateEmployee/AddEmployeeDocumetns" aria-controls="salary" role="tab" data-toggle="tab" aria-selected="false">Documents</a></li>
    <li class="nav-item"><a id="Salary" style="margin: -41px 19px -64px 462px;" class="nav-link" href="/CreateEmployee/AddEmployeeSalary" aria-controls="salary" role="tab" data-toggle="tab" aria-selected="false">Salary</a></li>
</ul>
        </div>

        <div class="row">
            <div class="col-md-12 col-md-offset-1" style=" margin: 7px -10px -3px -30px;">
                <form class="form-horizontal" role="form">
                    <h5 class="card-title mb-3">Experience</h5>

                    <div class="form-row">
                        <div class="col-12 col-sm-6 col-md-6">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">Organization</label>
                                @Html.EditorFor(model => model.Organization, new { htmlAttributes = new { @class = "form-control", @id = "Organization", @placeholder = "Organization", @autocomplete = "off" } })
                                @*@Html.ValidationMessageFor(model => model.Organization, "", new { @class = "text-danger" })*@
                                <span class="text-danger" id="error_msg_Organization" style="display:none">The Organization field is required.</span>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-6">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">Designation</label>
                                @Html.EditorFor(model => model.ExperienceDesignation, new { htmlAttributes = new { @class = "form-control", @id = "ExperienceDesignation", @placeholder = "Designation", @autocomplete = "off" } })
                                @*@Html.ValidationMessageFor(model => model.ExperienceDesignation, "", new { @class = "text-danger" })*@
                                <span class="text-danger" id="error_msg_ExperienceDesignation" style="display:none">The ExperienceDesignation field is required.</span>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">

                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label class="col-form-label control-label">Start Date</label>
                                <input type="date" id="StartDate" name="StartDate" class="form-control">
                                @*@Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })*@
                                <span class="text-danger" id="error_msg_StartDate" style="display:none">The StartDate field is required.</span>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-3">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label class="col-form-label control-label">End Date</label>
                                <input type="date" id="EndDate" name="EndDate" class="form-control">
                                @*@Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })*@
                                <span class="text-danger" id="error_msg_EndDate" style="display:none">The EndDate field is required.</span>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-6">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">StartSalary</label>
                                @Html.EditorFor(model => model.StartSalary, new { htmlAttributes = new { @class = "form-control", @id = "StartSalary", @placeholder = "StartSalary", @autocomplete = "off", @type = "number", onKeyDown = "if(this.value.length==10 && event.keyCode!=8) return false;" } })
                                @*@Html.ValidationMessageFor(model => model.StartSalary, "", new { @class = "text-danger" })*@
                                <span class="text-danger" id="error_msg_StartSalary" style="display:none">The StartSalary field is required.</span>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-6">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="fn" class="col-form-label control-label">EndSalary</label>
                                @Html.EditorFor(model => model.EndSalary, new { htmlAttributes = new { @class = "form-control", @id = "EndSalary", @placeholder = "EndSalary", @autocomplete = "off", @type = "number", onKeyDown = "if(this.value.length==10 && event.keyCode!=8) return false;" } })
                                @*@Html.ValidationMessageFor(model => model.EndSalary, "", new { @class = "text-danger" })*@
                                <span class="text-danger" id="error_msg_EndSalary" style="display:none">The EndSalary field is required.</span>
                            </div>
                        </div>
                    </div>


                    <div class="form-row">
                        <div class="col-md-12 ">
                            <div class="form-group pmd-textfield pmd-textfield-floating-label pmd-textfield-floating-label-completed">
                                <label for="Reason" class="d-block title-label">Reason</label>
                                <textarea id="Reason" name="Reason" cols="40" rows="5" class="form-control"></textarea>
                                <span class="text-danger" id="error_msg_Reason" style="display:none">The Reason field is required.</span>
                            </div>
                        </div>
                    </div>


                    <div class="form-row">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" style="padding:11px 67px 11px 66px;" value="Submit" name="btn_submitMain" id="btn_submitMain" class="btn btn-primary" />
                            <input type="button" style="padding:11px 67px 11px 66px;" id="btn_Reset" value="Reset" name="btn_Reset" class="btn btn-warning" />
                        </div>
                    </div>
                    <br />

                    <div>
                        <table id="tableEmpExperience" class="table">
                            <tr>
                                <th style="display:none;">
                                    Exp_PKID
                                </th>
                                <th style="display:none;">
                                    Employee_PKID
                                </th>
                                <th>
                                    Organization
                                </th>
                                <th>
                                    Designation
                                </th>
                                <th>
                                    Start Date
                                </th>
                                <th>
                                    End Date
                                </th>
                                <th>
                                    Start Salary
                                </th>
                                <th>
                                    EndSalary
                                </th>
                                <th>
                                    Reason
                                </th>
                                <th>Action</th>
                            </tr>

                            @*@foreach (var item in Model)
                                {
                                    <tr id="TableData">
                                        <td>

                                        </td>
                                        <td>

                                        </td>
                                        <td>

                                        </td>
                                        <td>
                                            <input type="button" id="btnEditUser" value="Edit" onclick="EditUser(@item.Id)" class="btn btn-default" /> |  //EditUser is a javascript function and passing Selected users id to the function
                                            <input type="button" id="btnDetailUser" value="Details" onclick="Details(@item.Id)" class="btn btn-default" /> |   //Details is a javascript function
                                            <input type="button" id="btnDeleteUser" value="Delete" onclick="Delete(@item.Id)" class="btn btn-default" />       //Delete is a javascript function
                                        </td>
                                    </tr>

                                }*@

                        </table>
                    </div>
                </form>
            </div>
        </div>
    </div>





}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
